{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/processed/example-object.ts"],
  "sourcesContent": ["import { z } from 'zod'\n\n/**\n * Example Object\n *\n * An object grouping an internal or external example value with basic summary and description metadata. This object is\n * typically used in fields named examples (plural), and is a referenceable alternative to older example (singular)\n * fields that do not support referencing or metadata.\n *\n * Examples allow demonstration of the usage of properties, parameters and objects within OpenAPI.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#example-object\n */\nexport const ExampleObjectSchema = z.object({\n  /**\n   * Short description for the example.\n   */\n  summary: z.string().optional(),\n  /**\n   * Long description for the example. CommonMark syntax MAY be used for rich text representation.\n   */\n  description: z.string().optional(),\n  /**\n   * Embedded literal example. The value field and externalValue field are mutually exclusive. To represent examples of media types that cannot naturally represented in JSON or YAML, use a string value to contain the example, escaping where necessary.\n   */\n  value: z.any().optional(),\n  /**\n   * A URI that identifies the literal example. This provides the capability to reference examples that cannot easily be\n   * included in JSON or YAML documents. The value field and externalValue field are mutually exclusive. See the rules\n   * for resolving Relative References.\n   */\n  externalValue: z.string().optional(),\n})\n"],
  "mappings": "AAAA,SAAS,SAAS;AAaX,MAAM,sBAAsB,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA,EAI1C,SAAS,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI7B,aAAa,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAIjC,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxB,eAAe,EAAE,OAAO,EAAE,SAAS;AACrC,CAAC;",
  "names": []
}
