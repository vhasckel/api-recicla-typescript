{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/processed/discriminator-object.ts"],
  "sourcesContent": ["import { z } from 'zod'\n\n/**\n * Discriminator Object\n *\n * When request bodies or response payloads may be one of a number of different schemas, a Discriminator Object gives a\n * hint about the expected schema of the document. This hint can be used to aid in serialization, deserialization, and\n * validation. The Discriminator Object does this by implicitly or explicitly associating the possible values of a named\n * property with alternative schemas.\n *\n * Note that discriminator MUST NOT change the validation outcome of the schema.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#discriminator-object\n */\nexport const DiscriminatorObjectSchema = z.object({\n  /**\n   * REQUIRED. The name of the property in the payload that will hold the discriminator value.\n   * This property SHOULD be required in the payload schema.\n   */\n  propertyName: z.string(),\n\n  /**\n   * An object to hold mappings between payload values and schema names or references.\n   * Keys MUST be strings, but implementations MAY convert response values to strings for comparison.\n   */\n  mapping: z.record(z.string(), z.string()).optional(),\n})\n"],
  "mappings": "AAAA,SAAS,SAAS;AAcX,MAAM,4BAA4B,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhD,cAAc,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAMvB,SAAS,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,OAAO,CAAC,EAAE,SAAS;AACrD,CAAC;",
  "names": []
}
