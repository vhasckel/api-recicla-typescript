{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/unprocessed/openapi-object.ts"],
  "sourcesContent": ["import { z } from 'zod'\nimport { OpenApiObjectSchema as OriginalOpenApiObjectSchema } from '../processed/openapi-object'\nimport { ComponentsObjectSchema } from './components-object'\nimport { ExternalDocumentationObjectSchema } from './external-documentation-object'\nimport { InfoObjectSchema } from './info-object'\nimport { PathsObjectSchema } from './paths-object'\nimport { SecurityRequirementObjectSchema } from './security-requirement-object'\nimport { ServerObjectSchema } from './server-object'\nimport { TagObjectSchema } from './tag-object'\nimport { WebhooksObjectSchema } from './webhooks-object'\n\nexport type OpenApiObject = {\n  openapi: string\n  info: z.infer<typeof InfoObjectSchema>\n  jsonSchemaDialect?: string\n  servers?: z.infer<typeof ServerObjectSchema>[]\n  paths?: z.infer<typeof PathsObjectSchema>\n  webhooks?: z.infer<typeof WebhooksObjectSchema>\n  components?: z.infer<typeof ComponentsObjectSchema>\n  security?: z.infer<typeof SecurityRequirementObjectSchema>[]\n  tags?: z.infer<typeof TagObjectSchema>[]\n  externalDocs?: z.infer<typeof ExternalDocumentationObjectSchema>\n}\n\n/**\n * OpenAPI Object\n *\n * This is the root object of the OpenAPI Description.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#openapi-object\n */\nexport const OpenApiObjectSchema = OriginalOpenApiObjectSchema.extend({\n  /**\n   * REQUIRED. Provides metadata about the API. The metadata MAY be used by tooling as required.\n   */\n  info: InfoObjectSchema,\n  /**\n   * An array of Server Objects, which provide connectivity information to a target server. If the servers field is\n   * not provided, or is an empty array, the default value would be a Server Object with a url value of /.\n   */\n  servers: z.array(ServerObjectSchema).optional(),\n  /**\n   * The available paths and operations for the API.\n   */\n  paths: PathsObjectSchema.optional(),\n  /**\n   * The incoming webhooks that MAY be received as part of this API and that the API consumer MAY choose to implement.\n   * Closely related to the callbacks feature, this section describes requests initiated other than by an API call,\n   * for example by an out of band registration. The key name is a unique string to refer to each webhook, while the\n   * (optionally referenced) Path Item Object describes a request that may be initiated by the API provider and the\n   * expected responses. An example is available.\n   */\n  webhooks: WebhooksObjectSchema.optional(),\n  /**\n   * An element to hold various Objects for the OpenAPI Description.\n   */\n  components: ComponentsObjectSchema.optional(),\n  /**\n   * A declaration of which security mechanisms can be used across the API. The list of values includes alternative\n   * Security Requirement Objects that can be used. Only one of the Security Requirement Objects need to be satisfied\n   * to authorize a request. Individual operations can override this definition. The list can be incomplete, up to\n   * being empty or absent. To make security explicitly optional, an empty security requirement ({}) can be included\n   * in the array.\n   */\n  security: z.array(SecurityRequirementObjectSchema).optional(),\n  /**\n   * A list of tags used by the OpenAPI Description with additional metadata. The order of the tags can be used to\n   * reflect on their order by the parsing tools. Not all tags that are used by the Operation Object must be declared.\n   * The tags that are not declared MAY be organized randomly or based on the tools' logic. Each tag name in the list\n   * MUST be unique.\n   */\n  tags: z.array(TagObjectSchema).optional(),\n  /**\n   * Additional external documentation.\n   */\n  externalDocs: ExternalDocumentationObjectSchema.optional(),\n}) as z.ZodType<OpenApiObject>\n"],
  "mappings": "AAAA,SAAS,SAAS;AAClB,SAAS,uBAAuB,mCAAmC;AACnE,SAAS,8BAA8B;AACvC,SAAS,yCAAyC;AAClD,SAAS,wBAAwB;AACjC,SAAS,yBAAyB;AAClC,SAAS,uCAAuC;AAChD,SAAS,0BAA0B;AACnC,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AAsB9B,MAAM,sBAAsB,4BAA4B,OAAO;AAAA;AAAA;AAAA;AAAA,EAIpE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,EAKN,SAAS,EAAE,MAAM,kBAAkB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI9C,OAAO,kBAAkB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQlC,UAAU,qBAAqB,SAAS;AAAA;AAAA;AAAA;AAAA,EAIxC,YAAY,uBAAuB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ5C,UAAU,EAAE,MAAM,+BAA+B,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5D,MAAM,EAAE,MAAM,eAAe,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAIxC,cAAc,kCAAkC,SAAS;AAC3D,CAAC;",
  "names": []
}
