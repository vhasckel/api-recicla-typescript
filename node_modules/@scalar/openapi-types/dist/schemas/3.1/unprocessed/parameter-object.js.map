{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/unprocessed/parameter-object.ts"],
  "sourcesContent": ["import { z } from 'zod'\nimport { ParameterObjectSchema as OriginalParameterObjectSchema } from '../processed/parameter-object'\nimport { ExampleObjectSchema } from './example-object'\nimport { MediaTypeObjectSchema } from './media-type-object'\nimport { ReferenceObjectSchema } from './reference-object'\n\n/**\n * Parameter Object\n *\n * Describes a single operation parameter.\n *\n * A unique parameter is defined by a combination of a name and location.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#parameter-object\n */\nexport const ParameterObjectSchema = OriginalParameterObjectSchema.extend({\n  /**\n   * Examples of the parameter's potential value. Each example SHOULD contain a value in the correct format as\n   * specified in the parameter encoding. The examples field is mutually exclusive of the example field. Furthermore,\n   * if referencing a schema that contains an example, the examples value SHALL override the example provided by the\n   * schema.\n   **/\n  examples: z.record(z.string(), z.union([ReferenceObjectSchema, ExampleObjectSchema])).optional(),\n  /**\n   * A map containing the representations for the parameter. The key is the media type and the value describes it.\n   * The map MUST only contain one entry.\n   **/\n  content: z.record(z.string(), MediaTypeObjectSchema).optional(),\n})\n"],
  "mappings": "AAAA,SAAS,SAAS;AAClB,SAAS,yBAAyB,qCAAqC;AACvE,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AAW/B,MAAM,wBAAwB,8BAA8B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxE,UAAU,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,MAAM,CAAC,uBAAuB,mBAAmB,CAAC,CAAC,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/F,SAAS,EAAE,OAAO,EAAE,OAAO,GAAG,qBAAqB,EAAE,SAAS;AAChE,CAAC;",
  "names": []
}
