{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/processed/components-object.ts"],
  "sourcesContent": ["import { z } from 'zod'\nimport { CallbackObjectSchema } from './callback-object'\nimport { ExampleObjectSchema } from './example-object'\nimport { HeaderObjectSchema } from './header-object'\nimport { LinkObjectSchema } from './link-object'\nimport { ParameterObjectSchema } from './parameter-object'\nimport { PathItemObjectSchema } from './path-item-object'\nimport { RequestBodyObjectSchema } from './request-body-object'\nimport { ResponseObjectSchema } from './response-object'\nimport { SchemaObjectSchema } from './schema-object'\nimport { SecuritySchemeObjectSchema } from './security-scheme-object'\n\n/**\n * Components Object\n *\n * Holds a set of reusable objects for different aspects of the OAS. All objects defined within the Components Object\n * will have no effect on the API unless they are explicitly referenced from outside the Components Object.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#components-object\n */\nexport const ComponentsObjectSchema = z.object({\n  /**\n   * An object to hold reusable Schema Objects.\n   */\n  schemas: z.record(z.string(), SchemaObjectSchema).optional(),\n  /**\n   * An object to hold reusable Response Objects.\n   */\n  responses: z.record(z.string(), ResponseObjectSchema).optional(),\n  /**\n   * An object to hold reusable Parameter Objects.\n   */\n  parameters: z.record(z.string(), ParameterObjectSchema).optional(),\n  /**\n   * An object to hold reusable Example Objects.\n   */\n  examples: z.record(z.string(), ExampleObjectSchema).optional(),\n  /**\n   * An object to hold reusable Request Body Objects.\n   */\n  requestBodies: z.record(z.string(), RequestBodyObjectSchema).optional(),\n  /**\n   * An object to hold reusable Header Objects.\n   */\n  headers: z.record(z.string(), HeaderObjectSchema).optional(),\n  /**\n   * An object to hold reusable Security Scheme Objects.\n   */\n  securitySchemes: z.record(z.string(), SecuritySchemeObjectSchema).optional(),\n  /**\n   * An object to hold reusable Link Objects.\n   */\n  links: z.record(z.string(), LinkObjectSchema).optional(),\n  /**\n   * An object to hold reusable Callback Objects.\n   */\n  callbacks: z.record(z.string(), CallbackObjectSchema).optional(),\n  /**\n   * An object to hold reusable Path Item Objects.\n   */\n  pathItems: z.record(z.string(), PathItemObjectSchema).optional(),\n})\n"],
  "mappings": "AAAA,SAAS,SAAS;AAClB,SAAS,4BAA4B;AACrC,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AACjC,SAAS,6BAA6B;AACtC,SAAS,4BAA4B;AACrC,SAAS,+BAA+B;AACxC,SAAS,4BAA4B;AACrC,SAAS,0BAA0B;AACnC,SAAS,kCAAkC;AAUpC,MAAM,yBAAyB,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA,EAI7C,SAAS,EAAE,OAAO,EAAE,OAAO,GAAG,kBAAkB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI3D,WAAW,EAAE,OAAO,EAAE,OAAO,GAAG,oBAAoB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI/D,YAAY,EAAE,OAAO,EAAE,OAAO,GAAG,qBAAqB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAIjE,UAAU,EAAE,OAAO,EAAE,OAAO,GAAG,mBAAmB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI7D,eAAe,EAAE,OAAO,EAAE,OAAO,GAAG,uBAAuB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAItE,SAAS,EAAE,OAAO,EAAE,OAAO,GAAG,kBAAkB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI3D,iBAAiB,EAAE,OAAO,EAAE,OAAO,GAAG,0BAA0B,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI3E,OAAO,EAAE,OAAO,EAAE,OAAO,GAAG,gBAAgB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAIvD,WAAW,EAAE,OAAO,EAAE,OAAO,GAAG,oBAAoB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAI/D,WAAW,EAAE,OAAO,EAAE,OAAO,GAAG,oBAAoB,EAAE,SAAS;AACjE,CAAC;",
  "names": []
}
