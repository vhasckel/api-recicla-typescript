{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/unprocessed/security-scheme-object.ts"],
  "sourcesContent": ["import {\n  ApiKeyInValues as OriginalApiKeyInValues,\n  ApiKeySchema as OriginalApiKeySchema,\n  AuthorizationCodeFlowSchema as OriginalAuthorizationCodeFlowSchema,\n  ClientCredentialsFlowSchema as OriginalClientCredentialsFlowSchema,\n  HttpSchema as OriginalHttpSchema,\n  ImplicitFlowSchema as OriginalImplicitFlowSchema,\n  MutualTlsSchema as OriginalMutualTlsSchema,\n  OAuthFlowObjectSchema as OriginalOAuthFlowObjectSchema,\n  OAuthFlowsObjectSchema as OriginalOAuthFlowsObjectSchema,\n  OpenIdConnectSchema as OriginalOpenIdConnectSchema,\n  PasswordFlowSchema as OriginalPasswordFlowSchema,\n  SecuritySchemeObjectSchema as OriginalSecuritySchemeObjectSchema,\n} from '../processed/security-scheme-object'\n\n/**\n * Security Scheme Object\n *\n * Defines a security scheme that can be used by the operations.\n *\n * Supported schemes are HTTP authentication, an API key (either as a header, a cookie parameter or as a query\n * parameter), mutual TLS (use of a client certificate), OAuth2's common flows (implicit, password, client credentials\n * and authorization code) as defined in RFC6749, and [[OpenID-Connect-Core]]. Please note that as of 2020, the implicit\n * flow is about to be deprecated by OAuth 2.0 Security Best Current Practice. Recommended for most use cases is\n * Authorization Code Grant flow with PKCE.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#security-scheme-object\n */\nexport const SecuritySchemeObjectSchema = OriginalSecuritySchemeObjectSchema\n\nexport const ApiKeyInValues = OriginalApiKeyInValues\nexport const ApiKeySchema = OriginalApiKeySchema\nexport const HttpSchema = OriginalHttpSchema\nexport const MutualTlsSchema = OriginalMutualTlsSchema\nexport const OpenIdConnectSchema = OriginalOpenIdConnectSchema\n\nexport const OAuthFlowsObjectSchema = OriginalOAuthFlowsObjectSchema\nexport const OAuthFlowObjectSchema = OriginalOAuthFlowObjectSchema\nexport const AuthorizationCodeFlowSchema = OriginalAuthorizationCodeFlowSchema\nexport const ClientCredentialsFlowSchema = OriginalClientCredentialsFlowSchema\nexport const ImplicitFlowSchema = OriginalImplicitFlowSchema\nexport const PasswordFlowSchema = OriginalPasswordFlowSchema\n"],
  "mappings": "AAAA;AAAA,EACE,kBAAkB;AAAA,EAClB,gBAAgB;AAAA,EAChB,+BAA+B;AAAA,EAC/B,+BAA+B;AAAA,EAC/B,cAAc;AAAA,EACd,sBAAsB;AAAA,EACtB,mBAAmB;AAAA,EACnB,yBAAyB;AAAA,EACzB,0BAA0B;AAAA,EAC1B,uBAAuB;AAAA,EACvB,sBAAsB;AAAA,EACtB,8BAA8B;AAAA,OACzB;AAeA,MAAM,6BAA6B;AAEnC,MAAM,iBAAiB;AACvB,MAAM,eAAe;AACrB,MAAM,aAAa;AACnB,MAAM,kBAAkB;AACxB,MAAM,sBAAsB;AAE5B,MAAM,yBAAyB;AAC/B,MAAM,wBAAwB;AAC9B,MAAM,8BAA8B;AACpC,MAAM,8BAA8B;AACpC,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;",
  "names": []
}
