{
  "version": 3,
  "sources": ["../../src/api-reference/source-configuration.ts"],
  "sourcesContent": ["import z from 'zod'\n\n/**\n * A source is any potential document input used for API Reference\n * and API Client integrations. Sources may be specified in the configuration\n * or used independently. Some configurations may have multiple sources.\n */\nexport const sourceConfigurationSchema = z.object({\n  /**\n   * URL to an OpenAPI/Swagger document\n   * @example\n   * ```ts\n   * const oldConfiguration = {\n   *   spec: {\n   *     url: 'https://example.com/openapi.json',\n   *   },\n   * }\n   *\n   * const newConfiguration = {\n   *   url: 'https://example.com/openapi.json',\n   * }\n   * ```\n   **/\n  url: z.string().optional(),\n  /**\n   * Directly embed the OpenAPI document.\n   * Can be a string, object, function returning an object, or null.\n   *\n   * @remarks It's recommended to pass a URL instead of content.\n   * @example\n   * ```ts\n   * const oldConfiguration = {\n   *   spec: {\n   *     content: '\u2026',\n   *   },\n   * }\n   *\n   * const newConfiguration = {\n   *   content: '\u2026',\n   * }\n   * ```\n   **/\n  content: z\n    .union([\n      z.string(),\n      z.null(),\n      z.record(z.string(), z.any()),\n      z.function({\n        input: [],\n        output: z.record(z.string(), z.any()),\n      }),\n    ])\n    .optional(),\n  /**\n   * The title of the OpenAPI document.\n   *\n   * @example 'Scalar Galaxy'\n   *\n   * @deprecated Please move `title` to the top level and remove the `spec` prefix.\n   */\n  title: z.string().optional(),\n  /**\n   * The slug of the OpenAPI document used in the URL.\n   *\n   * If none is passed, the title will be used.\n   *\n   * If no title is used, it'll just use the index.\n   *\n   * @example 'scalar-galaxy'\n   *\n   * @deprecated Please move `slug` to the top level and remove the `spec` prefix.\n   */\n  slug: z.string().optional(),\n  /**\n   * The OpenAPI/Swagger document to render\n   *\n   * @deprecated Use `url` and `content` on the top level instead.\n   **/\n  spec: z\n    .object({\n      url: z.string().optional(),\n      content: z\n        .union([\n          z.string(),\n          z.null(),\n          z.record(z.string(), z.any()),\n          z.function({\n            input: [],\n            output: z.record(z.string(), z.any()),\n          }),\n        ])\n        .optional(),\n    })\n    .optional(),\n})\n\nexport type SourceConfiguration = z.infer<typeof sourceConfigurationSchema>\n"],
  "mappings": "AAAA,OAAO,OAAO;AAOP,MAAM,4BAA4B,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBhD,KAAK,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBzB,SAAS,EACN,MAAM;AAAA,IACL,EAAE,OAAO;AAAA,IACT,EAAE,KAAK;AAAA,IACP,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,IAAI,CAAC;AAAA,IAC5B,EAAE,SAAS;AAAA,MACT,OAAO,CAAC;AAAA,MACR,QAAQ,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,IAAI,CAAC;AAAA,IACtC,CAAC;AAAA,EACH,CAAC,EACA,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQZ,OAAO,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAY3B,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1B,MAAM,EACH,OAAO;AAAA,IACN,KAAK,EAAE,OAAO,EAAE,SAAS;AAAA,IACzB,SAAS,EACN,MAAM;AAAA,MACL,EAAE,OAAO;AAAA,MACT,EAAE,KAAK;AAAA,MACP,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,IAAI,CAAC;AAAA,MAC5B,EAAE,SAAS;AAAA,QACT,OAAO,CAAC;AAAA,QACR,QAAQ,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,IAAI,CAAC;AAAA,MACtC,CAAC;AAAA,IACH,CAAC,EACA,SAAS;AAAA,EACd,CAAC,EACA,SAAS;AACd,CAAC;",
  "names": []
}
