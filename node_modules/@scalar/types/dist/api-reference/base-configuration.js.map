{
  "version": 3,
  "sources": ["../../src/api-reference/base-configuration.ts"],
  "sourcesContent": ["import z from 'zod'\n\nimport { apiClientPluginSchema } from './api-client-plugin'\n\nexport const OLD_PROXY_URL = 'https://api.scalar.com/request-proxy'\nexport const NEW_PROXY_URL = 'https://proxy.scalar.com'\n\n/** Shared configuration for the Api Reference and Api Client */\nexport const baseConfigurationSchema = z.object({\n  /**\n   * The title of the OpenAPI document.\n   *\n   * @example 'Scalar Galaxy'\n   */\n  title: z.string().optional(),\n  /**\n   * The slug of the OpenAPI document used in the URL.\n   *\n   * If none is passed, the title will be used.\n   *\n   * If no title is used, it'll just use the index.\n   *\n   * @example 'scalar-galaxy'\n   */\n  slug: z.string().optional(),\n  /** Prefill authentication */\n  authentication: z.any().optional(), // Temp until we bring in the new auth\n  /** Base URL for the API server */\n  baseServerURL: z.string().optional(),\n  /**\n   * Whether to hide the client button\n   * @default false\n   */\n  hideClientButton: z.boolean().optional().default(false).catch(false),\n  /** URL to a request proxy for the API client */\n  proxyUrl: z.string().optional(),\n  /** Key used with CTRL/CMD to open the search modal (defaults to 'k' e.g. CMD+k) */\n  searchHotKey: z\n    .enum([\n      'a',\n      'b',\n      'c',\n      'd',\n      'e',\n      'f',\n      'g',\n      'h',\n      'i',\n      'j',\n      'k',\n      'l',\n      'm',\n      'n',\n      'o',\n      'p',\n      'q',\n      'r',\n      's',\n      't',\n      'u',\n      'v',\n      'w',\n      'x',\n      'y',\n      'z',\n    ])\n    .optional(),\n  /** List of OpenAPI server objects */\n  servers: z.array(z.any()).optional(), // Using any for OpenAPIV3_1.ServerObject\n  /**\n   * Whether to show the sidebar\n   * @default true\n   */\n  showSidebar: z.boolean().optional().default(true).catch(true),\n  /**\n   * Sets the visibility of the developer tools\n   * @default 'localhost' to only show the toolbar on localhost or similar hosts\n   */\n  showToolbar: z.enum(['always', 'localhost', 'never']).optional().default('localhost').catch('localhost'),\n  /**\n   * Whether to use the operation summary or the operation path for the sidebar and search\n   * @default 'summary'\n   */\n  operationTitleSource: z.enum(['summary', 'path']).optional().default('summary').catch('summary'),\n  /** A string to use one of the color presets */\n  theme: z\n    .enum([\n      'alternate',\n      'default',\n      'moon',\n      'purple',\n      'solarized',\n      'bluePlanet',\n      'deepSpace',\n      'saturn',\n      'kepler',\n      'elysiajs',\n      'fastify',\n      'mars',\n      'laserwave',\n      'none',\n    ])\n    .optional()\n    .default('default')\n    .catch('default'),\n  /** Integration type identifier */\n  _integration: z\n    .enum([\n      'adonisjs',\n      'docusaurus',\n      'dotnet',\n      'elysiajs',\n      'express',\n      'fastapi',\n      'fastify',\n      'go',\n      'hono',\n      'html',\n      'laravel',\n      'litestar',\n      'nestjs',\n      'nextjs',\n      'nitro',\n      'nuxt',\n      'platformatic',\n      'react',\n      'rust',\n      'svelte',\n      'vue',\n    ])\n    .nullable()\n    .optional(),\n  /** onRequestSent is fired when a request is sent */\n  onRequestSent: z\n    .function({\n      input: [z.string()],\n      output: z.void(),\n    })\n    .optional(),\n  /** Whether to persist auth to local storage */\n  persistAuth: z.boolean().optional().default(false).catch(false),\n  /** Plugins for the API client */\n  plugins: z.array(apiClientPluginSchema).optional(),\n  /** Enables / disables telemetry*/\n  telemetry: z.boolean().optional().default(true),\n})\n"],
  "mappings": "AAAA,OAAO,OAAO;AAEd,SAAS,6BAA6B;AAE/B,MAAM,gBAAgB;AACtB,MAAM,gBAAgB;AAGtB,MAAM,0BAA0B,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9C,OAAO,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAU3B,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA,EAE1B,gBAAgB,EAAE,IAAI,EAAE,SAAS;AAAA;AAAA;AAAA,EAEjC,eAAe,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnC,kBAAkB,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,KAAK,EAAE,MAAM,KAAK;AAAA;AAAA,EAEnE,UAAU,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA,EAE9B,cAAc,EACX,KAAK;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,EACA,SAAS;AAAA;AAAA,EAEZ,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnC,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,IAAI,EAAE,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAK5D,aAAa,EAAE,KAAK,CAAC,UAAU,aAAa,OAAO,CAAC,EAAE,SAAS,EAAE,QAAQ,WAAW,EAAE,MAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvG,sBAAsB,EAAE,KAAK,CAAC,WAAW,MAAM,CAAC,EAAE,SAAS,EAAE,QAAQ,SAAS,EAAE,MAAM,SAAS;AAAA;AAAA,EAE/F,OAAO,EACJ,KAAK;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,EACA,SAAS,EACT,QAAQ,SAAS,EACjB,MAAM,SAAS;AAAA;AAAA,EAElB,cAAc,EACX,KAAK;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,EACA,SAAS,EACT,SAAS;AAAA;AAAA,EAEZ,eAAe,EACZ,SAAS;AAAA,IACR,OAAO,CAAC,EAAE,OAAO,CAAC;AAAA,IAClB,QAAQ,EAAE,KAAK;AAAA,EACjB,CAAC,EACA,SAAS;AAAA;AAAA,EAEZ,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,KAAK,EAAE,MAAM,KAAK;AAAA;AAAA,EAE9D,SAAS,EAAE,MAAM,qBAAqB,EAAE,SAAS;AAAA;AAAA,EAEjD,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,IAAI;AAChD,CAAC;",
  "names": []
}
