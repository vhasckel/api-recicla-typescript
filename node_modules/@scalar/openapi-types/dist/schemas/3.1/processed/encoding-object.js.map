{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/processed/encoding-object.ts"],
  "sourcesContent": ["import { z } from 'zod'\nimport { HeaderObjectSchema } from './header-object'\n\n/**\n * Encoding Object\n *\n * A single encoding definition applied to a single schema property. See Appendix B for a discussion of converting\n * values of various types to string representations.\n *\n * Properties are correlated with multipart parts using the name parameter of Content-Disposition: form-data, and with\n * application/x-www-form-urlencoded using the query string parameter names. In both cases, their order is\n * implementation-defined.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#encoding-object\n */\nexport const EncodingObjectSchema = z.object({\n  /**\n   * The Content-Type for encoding a specific property. The value is a comma-separated list, each element of which is\n   * either a specific media type (e.g. image/png) or a wildcard media type (e.g. image/*). Default value depends on the\n   * property type as shown in the table below.\n   */\n  contentType: z.string(),\n  /**\n   * A map allowing additional information to be provided as headers. Content-Type is described separately and SHALL be\n   * ignored in this section. This field SHALL be ignored if the request body media type is not a multipart.\n   */\n  headers: z.record(z.string(), HeaderObjectSchema).optional(),\n})\n"],
  "mappings": "AAAA,SAAS,SAAS;AAClB,SAAS,0BAA0B;AAc5B,MAAM,uBAAuB,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3C,aAAa,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,SAAS,EAAE,OAAO,EAAE,OAAO,GAAG,kBAAkB,EAAE,SAAS;AAC7D,CAAC;",
  "names": []
}
