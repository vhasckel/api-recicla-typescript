{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/unprocessed/encoding-object.ts"],
  "sourcesContent": ["import { z } from 'zod'\nimport { EncodingObjectSchema as OriginalEncodingObjectSchema } from '../processed/encoding-object'\nimport { HeaderObjectSchema } from './header-object'\nimport { ReferenceObjectSchema } from './reference-object'\n\n/**\n * Encoding Object\n *\n * A single encoding definition applied to a single schema property. See Appendix B for a discussion of converting\n * values of various types to string representations.\n *\n * Properties are correlated with multipart parts using the name parameter of Content-Disposition: form-data, and with\n * application/x-www-form-urlencoded using the query string parameter names. In both cases, their order is\n * implementation-defined.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#encoding-object\n */\nexport const EncodingObjectSchema = OriginalEncodingObjectSchema.extend({\n  /**\n   * A map allowing additional information to be provided as headers. Content-Type is described separately and SHALL be\n   * ignored in this section. This field SHALL be ignored if the request body media type is not a multipart.\n   */\n  headers: z.record(z.string(), z.union([ReferenceObjectSchema, HeaderObjectSchema])).optional(),\n})\n"],
  "mappings": "AAAA,SAAS,SAAS;AAClB,SAAS,wBAAwB,oCAAoC;AACrE,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AAc/B,MAAM,uBAAuB,6BAA6B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtE,SAAS,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,MAAM,CAAC,uBAAuB,kBAAkB,CAAC,CAAC,EAAE,SAAS;AAC/F,CAAC;",
  "names": []
}
