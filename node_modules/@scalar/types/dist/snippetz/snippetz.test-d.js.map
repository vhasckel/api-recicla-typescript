{
  "version": 3,
  "sources": ["../../src/snippetz/snippetz.test-d.ts"],
  "sourcesContent": ["import { assertType, describe, it } from 'vitest'\n\nimport type { ClientId, TargetId } from './index'\n\ndescribe('TargetId', () => {\n  it('has node as a target', () => {\n    const target = 'node'\n\n    assertType<TargetId>(target)\n  })\n\n  it(`target doesn't exist`, () => {\n    const target = 'foo'\n\n    // @ts-expect-error target doesn't exist\n    assertType<TargetId>(target)\n  })\n\n  it('has undici as a client', () => {\n    const client = 'undici'\n\n    assertType<ClientId<'node'>>(client)\n  })\n\n  it(`client doesn't exist`, () => {\n    const client = 'does-not-exist'\n\n    // @ts-expect-error client doesn't exist\n    assertType<ClientId<'node'>>(client)\n  })\n\n  it(`client exists, but target doesn't`, () => {\n    const client = 'undici'\n\n    // @ts-expect-error client exists, but target doesn't\n    assertType<ClientId<'foobar'>>(client)\n  })\n\n  it('client does exist, but not for the given target', () => {\n    const client = 'undici'\n\n    // @ts-expect-error client does exist, but not for the given target\n    assertType<ClientId<'shell'>>(client)\n  })\n})\n"],
  "mappings": "AAAA,SAAS,YAAY,UAAU,UAAU;AAIzC,SAAS,YAAY,MAAM;AACzB,KAAG,wBAAwB,MAAM;AAC/B,UAAM,SAAS;AAEf,eAAqB,MAAM;AAAA,EAC7B,CAAC;AAED,KAAG,wBAAwB,MAAM;AAC/B,UAAM,SAAS;AAGf,eAAqB,MAAM;AAAA,EAC7B,CAAC;AAED,KAAG,0BAA0B,MAAM;AACjC,UAAM,SAAS;AAEf,eAA6B,MAAM;AAAA,EACrC,CAAC;AAED,KAAG,wBAAwB,MAAM;AAC/B,UAAM,SAAS;AAGf,eAA6B,MAAM;AAAA,EACrC,CAAC;AAED,KAAG,qCAAqC,MAAM;AAC5C,UAAM,SAAS;AAGf,eAA+B,MAAM;AAAA,EACvC,CAAC;AAED,KAAG,mDAAmD,MAAM;AAC1D,UAAM,SAAS;AAGf,eAA8B,MAAM;AAAA,EACtC,CAAC;AACH,CAAC;",
  "names": []
}
