{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/processed/link-object.ts"],
  "sourcesContent": ["import { z } from 'zod'\nimport { RuntimeExpressionSchema } from './runtime-expression'\nimport { ServerObjectSchema } from './server-object'\n\n/**\n * Link Object\n *\n * The Link Object represents a possible design-time link for a response. The presence of a link does not guarantee the\n * caller's ability to successfully invoke it, rather it provides a known relationship and traversal mechanism between\n * responses and other operations.\n *\n * Unlike dynamic links (i.e. links provided in the response payload), the OAS linking mechanism does not require link\n * information in the runtime response.\n *\n * For computing links and providing instructions to execute them, a runtime expression is used for accessing values in an\n * operation and using them as parameters while invoking the linked operation.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#link-object\n */\nexport const LinkObjectSchema = z.object({\n  /**\n   * A URI reference to an OAS operation. This field is mutually exclusive of the operationId field, and MUST point to\n   * an Operation Object. Relative operationRef values MAY be used to locate an existing Operation Object in the OpenAPI Description.\n   */\n  operationRef: z.string().optional(),\n  /**\n   * The name of an existing, resolvable OAS operation, as defined with a unique operationId. This field is mutually\n   * exclusive of the operationRef field.\n   */\n  operationId: z.string().optional(),\n  /**\n   * A map representing parameters to pass to an operation as specified with operationId or identified via\n   * operationRef. The key is the parameter name to be used (optionally qualified with the parameter location, e.g.\n   * path.id for an id parameter in the path), whereas the value can be a constant or an expression to be evaluated\n   * and passed to the linked operation.\n   */\n  parameters: z.record(z.string(), RuntimeExpressionSchema).optional(),\n  /**\n   * A literal value or {expression} to use as a request body when calling the target operation.\n   */\n  requestBody: RuntimeExpressionSchema.optional(),\n  /**\n   * A description of the link. CommonMark syntax MAY be used for rich text representation.\n   */\n  description: z.string().optional(),\n  /**\n   * A server object to be used by the target operation.\n   */\n  server: ServerObjectSchema.optional(),\n})\n"],
  "mappings": "AAAA,SAAS,SAAS;AAClB,SAAS,+BAA+B;AACxC,SAAS,0BAA0B;AAiB5B,MAAM,mBAAmB,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvC,cAAc,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlC,aAAa,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjC,YAAY,EAAE,OAAO,EAAE,OAAO,GAAG,uBAAuB,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAInE,aAAa,wBAAwB,SAAS;AAAA;AAAA;AAAA;AAAA,EAI9C,aAAa,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA;AAAA;AAAA,EAIjC,QAAQ,mBAAmB,SAAS;AACtC,CAAC;",
  "names": []
}
